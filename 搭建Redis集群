                                  redis集群
部署集群环境
• redis 服务器 ip 地址及端口规划
– node1 192.168.4.51 6351
– node2 192.168.4.52 6352
– node3 192.168.4.53 6353
– node4 192.168.4.54 6354
– node5 192.168.4.55 6355
– node6 192.168.4.56 6356
1.安装#yum -y install gcc
#tar -zxvf redis-4.0.8.tar.gz
#cd redis-4.0.8/
#make
#make install
#./utils/install_server.sh

2.#vim /etc/redis/redis.conf(启集群配置)
70、 bind IP地址 -------------------------// 只写物理接口 IP 地址
136、daemonize yes-----------------------//守护进程方式运行
91、 port xxxx---------------------------//端口号不要使用默认的 6379
815、cluster-enabled yes-----------------// 开启集群
823、cluster-config-file nodes.conf------// 集群的配置文件不要使用默认的名称
829、cluster-node-timeout 5000-----------// 请求超时 5 秒

3.cluster info---------------------------查看集群状态
cluster nodes----------------------------查看集群有那些机器
##########################################################################
51做管理主机即做集群主机
scp /root/redis-3.2.1.gem 192.168.4.51:/root/
scp /root/ruby-devel-2.0.0.648-30.el7.x86_64.rpm 192.168.4.51:/root/
1.yum -y install ruby rubygems
2.rpm -ivh --nodeps ruby-devel-2.0.0.648-30.el7.x86_64.rpm
3.gem install redis-3.2.1.gem
4.cd /root/redis/redis-4.0.8/src/
ls *.rb ------------>redis-trib.rb
mkdir /root/bin
cp redis-trib.rb   /root/bin

在管理主机创建redis集群(51主机)
1、node1 src]#./redis-trib.rb create --replicas 1 
192.168.4.51:6351     192.168.4.52:6352     192.168.4.53:6353 
192.168.4.54:6354    192.168.4.55:6355     192.168.4.56:6356
2、检查redis-cli -h 192.168.4.XX -p 63XX
2.1 cluster info-----查看集群信息   2.2 cluster nodes---------查看集群节点信息
3.在客户端连接任意一台主机
redis-cli -c -h 192.168.4.52 -p 6352
###################################################################################
                                        管理redis集群:
一、向集群里添加新的redis(master)服务(新的主机)，角色是master(主机):配置步棸
1.装包、初始化、启用集群配置、重起服务--------------->配置新master的主机配置
2.添加master主机歩鄹
redis-trib.rb add-node 新主机ip:端口   管理主机ip:端口------------------------>添加master主机
重新分片
redis-trib.rb reshard  管理主机ip:端口--------->redis-trib.rb reshard 192.168.4.51:6351  
指定移除hast槽个数、指定接受hash槽主机ip

二、向集群里添加新的redis(slave)服务(新的主机)，角色是slave(主机):配置步棸
1.装包、初始化、启用集群配置、重起服务--------------->配置新slave的主机配置
2.添加slave主机歩鄹
redis-trib.rb add-node --slave slave主机ip:端口   添加到master主机ip:端口
三、移除master主机
1.重新分片释放占用的hash槽：redis-trib.rb reshard 移除master主机ip:端口
指定移除hash槽个数、指定接受hash槽主机id、指定移除hash槽 主机id
2.移除master主机：redis-trib.rb del-node 管理主机ip:端口  移除master主机id
四、移除slave主机
redis-trib.rb del-node 管理主机ip:端口   移除slave主机id
##############################################################################
redis-trib.rb   选项  参数
选项
add-node-------------------添加master主机
check----------------------检测集群
reshard--------------------重新分片
add-node --slave ----------添加slave主机
del-node-------------------删除主机或移出主机

相关知识：redis 内存数据集大小上升到一定大小的时候，就会施行数据淘汰策略。redis 提供 6种数据淘汰策略：

voltile-lru：从已设置过期时间的数据集（server.db[i].expires）中挑选最近最少使用的数据淘汰

volatile-ttl：从已设置过期时间的数据集（server.db[i].expires）中挑选将要过期的数据淘汰

volatile-random：从已设置过期时间的数据集（server.db[i].expires）中任意选择数据淘汰

allkeys-lru：从数据集（server.db[i].dict）中挑选最近最少使用的数据淘汰

allkeys-random：从数据集（server.db[i].dict）中任意选择数据淘汰

no-enviction（驱逐）：禁止驱逐数据


