一、配置nginx文件
vim /usr/local/nginx/conf/nginx.conf
.. ..
http {
.. ..
#使用upstream定义后端服务器集群，集群名称任意(如webserver)
#使用server定义集群中的具体服务器和端口
upstream webserver {
                server 192.168.2.100:80;
                server 192.168.2.200:80;
        }
.. ..
server {
        listen        80;
        server_name  localhost;
            location / {
#通过proxy_pass将用户的请求转发给webserver集群
            proxy_pass http://webserver;
        }
}

二、配置keepalived配置文件
vim /etc/keepalived/
global_defs {
   notification_email {
       gavin@                                              # 定义通知邮箱,有多个可以换行添加
}
   notification_email_from admin@# 定义发送邮件的邮箱
   smtp_server 127.0.0.1                                   # 定义发件服务器
   smtp_connect_timeout 30                                 # 定义连接smtp服务器超时时间
   router_id LVS_DEVEL
}
vrrp_instance VI_1 {
    state MASTER                                           # 标示主备,备机上改为BACKUP
    interface   eth0                                       # HA监测的端口
    virtual_router_id 51                                   # 主备的virtual_router_id的值必须相同
    priority 100                                           # 优先级,通常主要比备稍大
    advert_int 1                                           # VRRP Multicast 广播周期秒数
    authentication {                                       # 定义认证
        auth_type PASS                                     # 认证方式
        auth_pass 1111                                     # 认证口令字
    }
    virtual_ipaddress {                                    # 定义vip
    192.168.1.100                                          # 多个可换行添加,一行一个
    }
}


virtual_server  192.168.1.100 80 {
    delay_loop 6                                           # 每隔 6 秒查询 realserver 状态
    lb_algo rr
    lb_kind NAT
    nat_mask
    persistence_timeout 50                                 # 同一IP 的连接50秒内被分配到同一台realserver
    protocol TCP                                           # 用TCP监测realserver的状态
    real_server  192.168.1.48 80 {                         #需要指向nginx负载的地址
        weight 1                                           # 权重
        TCP_CHECK {
            connect_timeout 10                             # 10秒无响应超时
            nb_get_retry 3
            delay_before_retry 3
            connect_port 80
        }
    }
    real_server 192.168.1.68 80 {                         #需要指向nginx负载的地址
        weight 1
        TCP_CHECK {
            connect_timeout 3
            delay_before_retry 3
            connect_port 80
        }
    }
}
~     
